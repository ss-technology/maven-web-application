node{
try {
    echo "Build Number is: ${env.BUILD_NUMBER}"
echo "Job name is: ${env.JOB_NAME}"
echo "Node name is: ${env.NODE_NAME}"

def mavenHome = tool name: "maven3.8.6"

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM(' * * * * *')])])

stage('CheckoutCode'){
git branch: 'development', credentialsId: '1aa319e0-19ff-4bf2-8f20-5463deb7448b', url: 'https://github.com/ss-technology/maven-web-application.git'
}

stage('Build'){
sh "${mavenHome}/bin/mvn clean package"
}

  stage('ExecuteSonarQubeReport'){
sh "${mavenHome}/bin/mvn sonar:sonar"
}
stage('UploadArtifactintoNexus'){
sh "${mavenHome}/bin/mvn deploy"
}
stage('DeployAppintoTomcatServer'){
sshagent(['8bc5cb8e-6760-465a-be29-1e9c01e9bb8c']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@13.232.102.29:1234:/opt/apache-tomcat-9.0.68/webapps/"
}
}

}//try clossing
catch(e){
currentBuild.result = "FAILURE"
}//catch clossing
finally{
sendslacknotifications(currentBuild.result)
}//finally clossing
   
}//node complete


def sendslacknotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
   colorName = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: "walmart")
}
